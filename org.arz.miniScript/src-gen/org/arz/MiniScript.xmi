<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xtext="http://www.eclipse.org/2008/Xtext">
  <xtext:Grammar name="org.arz.MiniScript" usedGrammars="/1">
    <metamodelDeclarations xsi:type="xtext:GeneratedMetamodel" name="miniScript">
      <ePackage href="http://www.arz.org/miniScript#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="Model">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Model"/>
      </type>
      <alternatives xsi:type="xtext:RuleCall" rule="/0/@rules.1"/>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Program">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Program"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="expressions" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Assignment" feature="expressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=";"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="AdditionOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.arz.org/miniScript#//AdditionOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//AdditionOperator/add"/>
          <literal value="+"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//AdditionOperator/subtract"/>
          <literal value="-"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="FactorOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.arz.org/miniScript#//FactorOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//FactorOperator/mult"/>
          <literal value="*"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//FactorOperator/division"/>
          <literal value="/"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="ComparisonOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.arz.org/miniScript#//ComparisonOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//ComparisonOperator/gt"/>
          <literal value=">"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//ComparisonOperator/gte"/>
          <literal value=">="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//ComparisonOperator/lt"/>
          <literal value="&lt;"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//ComparisonOperator/lte"/>
          <literal value="&lt;="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//ComparisonOperator/eq"/>
          <literal value="=="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//ComparisonOperator/noteq"/>
          <literal value="!="/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="UnaryLogicalOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.arz.org/miniScript#//UnaryLogicalOperator"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://www.arz.org/miniScript#//UnaryLogicalOperator/not"/>
        <literal value="not"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="BinaryLogicalOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.arz.org/miniScript#//BinaryLogicalOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//BinaryLogicalOperator/and"/>
          <literal value="and"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//BinaryLogicalOperator/or"/>
          <literal value="or"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="TernaryOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.arz.org/miniScript#//TernaryOperator"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://www.arz.org/miniScript#//TernaryOperator/ifExpression"/>
        <literal value="if"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="BooleanValue">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.arz.org/miniScript#//BooleanValue"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//BooleanValue/true"/>
          <literal value="true"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.arz.org/miniScript#//BooleanValue/false"/>
          <literal value="false"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Expression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.16"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.26"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.13"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.14"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.12"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.11"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.10"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BlockExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//BlockExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:Group" cardinality="+">
          <elements xsi:type="xtext:Assignment" feature="expressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=";"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="}"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="LetExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//LetExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="let"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="assigment" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.26"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=","/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TernaryExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//TernaryExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="firstExpression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=","/>
        <elements xsi:type="xtext:Assignment" feature="secondExpression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=","/>
        <elements xsi:type="xtext:Assignment" feature="thirdExpression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="LogicalBinaryExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//LogicalBinaryExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.6"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="leftExpr" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=","/>
        <elements xsi:type="xtext:Assignment" feature="rightExpr" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="LogicalUnaryExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//LogicalUnaryExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.5"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ComparisonExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.18"/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Action" feature="leftExpr" operator="=">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//ComparisonExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.4"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="rightExpr" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.18"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="FunctionDeclaration">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//FunctionDeclaration"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="func"/>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Assignment" feature="parameters" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="parameters" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
        <elements xsi:type="xtext:Assignment" feature="body" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="SymbolReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//SymbolReference"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="id" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NumericExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.19"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="leftFactor" operator="=">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//NumericExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.2"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="rightFactor" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.19"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Factor">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.20"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="leftTerm" operator="=">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Factor"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.3"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="rightTerm" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.20"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Term">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.23"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.21"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Apply">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.22"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="functor" operator="=">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Apply"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Assignment" feature="arguments" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
            </elements>
            <elements xsi:type="xtext:Group" cardinality="*">
              <elements xsi:type="xtext:Keyword" value=","/>
              <elements xsi:type="xtext:Assignment" feature="arguments" operator="+=">
                <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
              </elements>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Functor">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.17"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.27"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="LiteralExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.25"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.24"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="LiteralBoolean">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//LiteralBoolean"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.8"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="LiteralNumber">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//LiteralNumber"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="VariableAssignment">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//VariableAssignment"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="id" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="="/>
        <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ParenthesisExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.arz.org/miniScript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="org.eclipse.xtext.common.Terminals" definesHiddenTokens="true" hiddenTokens="/1/@rules.5 /1/@rules.3 /1/@rules.4">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:TerminalRule" name="ID">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="^"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="INT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </type>
      <alternatives xsi:type="xtext:CharacterRange" cardinality="+">
        <left value="0"/>
        <right value="9"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="STRING">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="u"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="'"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="u"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="'"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ML_COMMENT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="/*"/>
        <elements xsi:type="xtext:UntilToken">
          <terminal xsi:type="xtext:Keyword" value="*/"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="SL_COMMENT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="//"/>
        <elements xsi:type="xtext:NegatedToken" cardinality="*">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="&#xA;"/>
            <elements xsi:type="xtext:Keyword" value="&#xD;"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" cardinality="?" value="&#xD;"/>
          <elements xsi:type="xtext:Keyword" value="&#xA;"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="WS">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives" cardinality="+">
        <elements xsi:type="xtext:Keyword" value=" "/>
        <elements xsi:type="xtext:Keyword" value="&#x9;"/>
        <elements xsi:type="xtext:Keyword" value="&#xD;"/>
        <elements xsi:type="xtext:Keyword" value="&#xA;"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ANY_OTHER">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Wildcard"/>
    </rules>
  </xtext:Grammar>
</xmi:XMI>
